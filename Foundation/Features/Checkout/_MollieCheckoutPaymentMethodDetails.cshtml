@using AdvancedExternalReviews.ReviewLinksRepository
@using Foundation.Features.Checkout.Payments

@model MollieCheckoutPaymentOption

@Html.HiddenFor(model => model.PaymentMethodId)


<div class="row">
    <div class="col-md-1">&nbsp;</div>
    <div class="col-md-11 checkout-mollie">

        @{var first = true;}
        @foreach (var method in Model.PaymentMethods)
        {
            <div>
                <label class="checkbox">
                    <input type="radio" class="jsSelectMethod" name="molliePaymentMethod" value="@method.Id" data-methodId="@method.Id" @(first ? "checked" : string.Empty)/>
                    <img src="@method.ImageSize1X" alt="@method.Description"/>
                    @method.Description
                    <span class="checkmark"></span>
                </label>
            </div>

            <div id="method-container_@method.Id" class="method-container" style="display: @(first ? "block" : "none")">
                @if (method.Id.Equals("creditcard", StringComparison.InvariantCultureIgnoreCase))
                {
                    <div class="wrapper">
                        <form method="post" class="form" id="mcForm">
                            <div class="form-fields">
                                <div class="form-group form-group--card-holder">
                                    <label class="label" for="card-holder">Card holder</label>
                                    <div id="card-holder"></div>
                                    <div id="card-holder-error" class="field-error" role="alert"></div>
                                </div>

                                <div class="form-group form-group--card-number">
                                    <label class="label" for="card-number">Card number</label>
                                    <div id="card-number"></div>
                                    <div id="card-number-error" class="field-error" role="alert"></div>
                                </div>

                                <div class="form-group form-group--expiry-date">
                                    <label class="label" for="expiry-date">Expiry date</label>
                                    <div id="expiry-date"></div>
                                    <div id="expiry-date-error" class="field-error" role="alert"></div>
                                </div>

                                <div class="form-group form-group--verification-code">
                                    <label class="label" for="verification-code">Verification code</label>
                                    <div id="verification-code"></div>
                                    <div id="verification-code-error" class="field-error" role="alert"></div>
                                </div>
                            </div>

                            @*<button id="submit-button" class="submit-button" type="submit">
                                Pay
                            </button>*@

                            <div id="form-error" class="form-error" role="alert"></div>
                        </form>
                    </div>
                }

                <span>@method.Description details</span>
            </div>

            first = false;
        }

    </div>
</div>

<hr/>


<script language="javascript">

    var methodRadios = document.querySelectorAll('.jsSelectMethod');

    for (var i = 0; i < methodRadios.length; i++) {
        methodRadios[i].onclick = selectedMethodToggle;
    }

    function selectedMethodToggle(event) {
        var el = this;

        var value = el.value;


        var allContainers = document.querySelectorAll('.method-container');
        for (var i = 0; i < allContainers.length; i++) {
            allContainers[i].style.display = "none";
        }

        var targetContainer = document.querySelector('#method-container_' + value);
        if (targetContainer !== undefined && targetContainer !== null) {
            targetContainer.style.display = "block";

            if (value === "creditcard") {
                initCCComponent();
            }
        }
    }

    function initCCComponent() {
        var mollie = Mollie('@Model.Configuration.ProfileId', { locale: 'nl_NL', testmode: true });
        
        var cardNumber = mollie.createComponent('cardNumber');
        cardNumber.mount('#card-number');

        var cardHolder = mollie.createComponent('cardHolder');
        cardHolder.mount('#card-holder');

        var expiryDate = mollie.createComponent('expiryDate');
        expiryDate.mount('#expiry-date');

        var verificationCode = mollie.createComponent('verificationCode');
        verificationCode.mount('#verification-code');
    }

    initCCComponent();



</script>
